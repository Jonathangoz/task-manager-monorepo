# render.yaml

# Render Blueprint for Task Manager MonoRepo
# Repository: Jonathangoz/task-manager-monorepo
# Branches: main (production), develop (staging)

previewsEnabled: true
previewsExpireAfterDays: 7

services:
  # üîê Auth Service - Production
  - type: web
    name: task-manager-auth-service
    runtime: node
    plan: free
    region: oregon # Mant√©ner la regi√≥n consistente para todos los servicios
    branch: main
    rootDir: ./services/auth-service
    buildCommand: |
      echo "üèóÔ∏è Building Auth Service..."
      pnpm install --frozen-lockfile
      pnpm prisma:generate
      pnpm build
    startCommand: pnpm start:prod
    healthCheckPath: /api/v1/health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3001
      - key: API_VERSION
        value: v1
      - key: DATABASE_URL
        fromDatabase:
          name: auth-db-prod
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: task-manager-cache-prod
          property: connectionString
      - key: REDIS_PREFIX
        value: "auth:"
      # secreto global de GitHub
      - key: JWT_SECRET
        fromSecret: JWT_GLOBAL_SECRET
      - key: JWT_EXPIRES_IN
        value: "15m"
      - key: JWT_ISSUER
        value: "task-manager-auth"
      # secreto global de GitHub
      - key: REFRESH_TOKEN_SECRET
        fromSecret: REFRESH_TOKEN_GLOBAL_SECRET
      - key: REFRESH_TOKEN_EXPIRES_IN
        value: "7d"
      # secreto global de GitHub
      - key: JWE_SECRET
        fromSecret: JWE_GLOBAL_SECRET
      - key: JWE_ALGORITHM
        value: "dir"
      - key: JWE_ENCRYPTION
        value: "A256GCM"
      - key: CORS_ORIGIN
        value: "*" # Configurar con dominio espec√≠fico en producci√≥n DESPU√âS del despliegue
      - key: LOG_LEVEL
        value: "info"
      - key: LOG_PRETTY
        value: "false"
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "100"
      - key: HELMET_ENABLED
        value: "true"
      - key: HEALTH_CHECK_ENABLED
        value: "true"
      - key: SWAGGER_ENABLED
        value: "true"
      # Se asume AUTH_SERVICE_API_KEY no es necesario en Auth Service, sino en Task Service.
      # Si Auth Service mismo lo necesita para alguna integraci√≥n, a√±√°delo.

  # üîê Auth Service - Staging
  - type: web
    name: task-manager-auth-service-staging
    runtime: node
    plan: free
    region: oregon
    branch: develop
    rootDir: ./services/auth-service
    buildCommand: |
      echo "üèóÔ∏è Building Auth Service (Staging)..."
      pnpm install --frozen-lockfile
      pnpm prisma:generate
      pnpm build
    startCommand: pnpm start:prod
    healthCheckPath: /api/v1/health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: staging
      - key: PORT
        value: 3001
      - key: API_VERSION
        value: v1
      - key: DATABASE_URL
        fromDatabase:
          name: auth-db-staging
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: task-manager-cache-staging
          property: connectionString
      - key: REDIS_PREFIX
        value: "auth:staging:"
      - key: JWT_SECRET
        fromSecret: JWT_GLOBAL_SECRET
      - key: JWT_EXPIRES_IN
        value: "15m"
      - key: JWT_ISSUER
        value: "task-manager-auth-staging"
      - key: REFRESH_TOKEN_SECRET
        fromSecret: REFRESH_TOKEN_GLOBAL_SECRET
      - key: REFRESH_TOKEN_EXPIRES_IN
        value: "7d"
      - key: JWE_SECRET
        fromSecret: JWE_GLOBAL_SECRET # Corregido: Asegurado que usa fromSecret
      - key: JWE_ALGORITHM
        value: "dir"
      - key: JWE_ENCRYPTION
        value: "A256GCM"
      - key: CORS_ORIGIN
        value: "*"
      - key: LOG_LEVEL
        value: "debug"
      - key: LOG_PRETTY
        value: "false"
      - key: SWAGGER_ENABLED
        value: "true"
      # A√±adidas para coherencia con producci√≥n y buena pr√°ctica
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "100"
      - key: HELMET_ENABLED
        value: "true"
      - key: HEALTH_CHECK_ENABLED
        value: "true"

  # ‚úÖ Task Service - Production
  - type: web
    name: task-manager-task-service
    runtime: node
    plan: free
    region: oregon
    branch: main
    rootDir: ./services/task-service
    buildCommand: |
      echo "üèóÔ∏è Building Task Service..."
      pnpm install --frozen-lockfile
      pnpm prisma:generate
      pnpm build
    startCommand: pnpm start:prod
    healthCheckPath: /api/v1/health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3002
      - key: API_VERSION
        value: v1
      - key: DATABASE_URL
        fromDatabase:
          name: task-db-prod
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: task-manager-cache-prod
          property: connectionString
      - key: REDIS_PREFIX
        value: "tasks:"
      - key: AUTH_SERVICE_URL
        value: "http://task-manager-auth-service:3001" # Corregido
      - key: AUTH_SERVICE_VERIFY_ENDPOINT
        value: "/api/v1/auth/verify-token"
      # Usamos el mismo secreto global para JWT
      - key: JWT_SECRET
        fromSecret: JWT_GLOBAL_SECRET
      - key: JWT_ISSUER
        value: "task-manager-auth"
      # clave API para comunicaci√≥n interna
      - key: AUTH_SERVICE_API_KEY
        fromSecret: AUTH_SERVICE_API_KEY
      - key: CORS_ORIGIN
        value: "*" # Configurar con dominio espec√≠fico DESPU√âS del despliegue
      - key: LOG_LEVEL
        value: "info"
      - key: LOG_PRETTY
        value: "false"
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "200"
      - key: DEFAULT_PAGE_SIZE
        value: "20"
      - key: MAX_PAGE_SIZE
        value: "100"
      - key: HELMET_ENABLED
        value: "true"
      - key: HEALTH_CHECK_ENABLED
        value: "true"
      - key: SWAGGER_ENABLED
        value: "true"
      # TTL de cach√© para Task Service
      - key: CACHE_TTL_TASKS
        value: "300"
      - key: CACHE_TTL_CATEGORIES
        value: "600"
      - key: CACHE_TTL_USER_TASKS
        value: "180"

  # ‚úÖ Task Service - Staging
  - type: web
    name: task-manager-task-service-staging
    runtime: node
    plan: free
    region: oregon
    branch: develop
    rootDir: ./services/task-service
    buildCommand: |
      echo "üèóÔ∏è Building Task Service (Staging)..."
      pnpm install --frozen-lockfile
      pnpm prisma:generate
      pnpm build
    startCommand: pnpm start:prod
    healthCheckPath: /api/v1/health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: staging
      - key: PORT
        value: 3002
      - key: API_VERSION
        value: v1
      - key: DATABASE_URL
        fromDatabase:
          name: task-db-staging
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: task-manager-cache-staging
          property: connectionString
      - key: REDIS_PREFIX
        value: "tasks:staging:"
      - key: AUTH_SERVICE_URL
        value: "http://task-manager-auth-service-staging:3001" # Corregido
      - key: AUTH_SERVICE_VERIFY_ENDPOINT
        value: "/api/v1/auth/verify-token"
      - key: JWT_SECRET
        fromSecret: JWT_GLOBAL_SECRET # Mismo secreto global
      - key: JWT_ISSUER
        value: "task-manager-auth-staging"
      - key: AUTH_SERVICE_API_KEY
        fromSecret: AUTH_SERVICE_API_KEY # Mismo secreto global
      - key: CORS_ORIGIN
        value: "*"
      - key: LOG_LEVEL
        value: "debug"
      - key: LOG_PRETTY
        value: "false"
      - key: SWAGGER_ENABLED
        value: "true"
      - key: DEFAULT_PAGE_SIZE
        value: "20"
      - key: MAX_PAGE_SIZE
        value: "100"
      - key: CACHE_TTL_TASKS
        value: "300"
      - key: CACHE_TTL_CATEGORIES
        value: "600"
      - key: CACHE_TTL_USER_TASKS
        value: "180"
      # A√±adidas para coherencia con producci√≥n y buena pr√°ctica
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "200"
      - key: HELMET_ENABLED
        value: "true"
      - key: HEALTH_CHECK_ENABLED
        value: "true"

  # Production Redis
  - type: keyvalue
    name: task-manager-cache-prod
    plan: free
    region: oregon
    ipAllowList: []
    maxmemoryPolicy: allkeys-lru

  # Staging Redis
  - type: keyvalue
    name: task-manager-cache-staging
    plan: free
    region: oregon
    ipAllowList: []
    maxmemoryPolicy: allkeys-lru

databases:
  # Production Databases
  - name: auth-db-prod
    databaseName: auth_db
    user: auth_user
    plan: free
    region: oregon

  - name: task-db-prod
    databaseName: task_db
    user: task_user
    plan: free
    region: oregon

  # Staging Databases
  - name: auth-db-staging
    databaseName: auth_db_staging
    user: auth_user_staging
    plan: free
    region: oregon

  - name: task-db-staging
    databaseName: task_db_staging
    user: task_user_staging
    plan: free
    region: oregon